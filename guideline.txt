==================================================
	レギュレーション
==================================================
文字エンコーディング：UTF-8
インデント：タブスペース１つ（半角スペース2個分） ※スペースと混在させない
改行コード - LF
リソースへの参照パス：相対パスで記述


==================================================
	フォルダ構成
==================================================
/develop/ にワークデータ一式あり。
/develop/と同階層にあるファイル（ gulpfile.js、package.json、Readme.txtなど）は編集不可とする。

/develop/ で開発をし、 /html/に自動で生成されます。


==================================================
	サーバーアップファイル
==================================================
/develop/ 内が作業環境のため、基本的には /html/ のファイルをアップする。


==================================================
	命名規則
==================================================
グルーウェブルールの場合は下記を参照

● http://www.grooweb.jp/blog/archives/48 （弊社ブログ）
● http://www.grooweb.jp/blog/archives/64 （弊社ブログ）
● develop-html/sass/1.guideline.txt
● develop-html/sass/2.selecter-naming.txt


==================================================
	CSS ルール
==================================================
font-sizeの単位は rem。（14px → 1.4rem）
line-heightは単位指定をしない。（ line-height: 1.5; ）
ベンダープレフィックスはgulpが補完してくれるため不要。

-----------------------------------
	sass
-----------------------------------
フォルダ構成に関しては、下記を参照。
develop-html/sass/1.guideline.txt

基本的には、/develop-html/sass/module/ に、各クラスごとに１ファイルを生成していますが、
ヘッダー、フッター、ボタン、テーブル、テキストなどのパーツは、それぞれ１ファイルで複数クラスを管理することもあります。


==================================================
	画像について
==================================================
imgタグへwidth、height属性は挿入しない

-----------------------------------
	代替テキスト(alt属性）
-----------------------------------
テキストが含まれている画像は、そのテキスト情報をそのまま記述。
複雑な図表はできるだけ概要を入れておく。
内容に意味が無い場合、もしくは前後に同じ内容のテキストがある場合は"空"でOK。

-----------------------------------
	画像の格納場所
-----------------------------------
develop/img/ に画像を書くのすると
html/img/ に軽量化された画像が生成されるようになっています。


==================================================
	ejsについて
==================================================
ejsファイルからHTMLを生成していますので、HTMLを変更する場合は、元ファイルのejsを変更してください。
sassとcssの関係性と同様で、HTMLのみ変更しても、gulpが動いた瞬間にその変更は取り消され、先祖返りします。

headerとfooterはパーツ化して、管理しています。


==================================================
	JavaScriptについて
==================================================
基本的には全て js/common.js に、コメントを参考に記載。
「追加スペース」に関するコメントアウトは最後に削除可。


==================================================
	ブレイクポイントについて
==================================================
ブレイクポイントは、js/common.js と sass/tools/mixins.scss の２箇所に設定しなければならない。
common.js が忘れられやすいので注意する。


==================================================
	gulpについて
==================================================

-----------------------------------
	「node」インストール作業時に参照するページ
-----------------------------------
http://qiita.com/oreo3@github/items/622fd6a09d5c1593fee4
http://www.task-notes.com/entry/20141130/1417319179

-----------------------------------
	汎用コマンド
-----------------------------------
インストールしているプラグイン一覧表示コマンド
npm list --depth=0

プラグインインストールコマンド
npm install --save-dev プラグイン名

プラグインアンインストールコマンド
npm uninstall --save-dev プラグイン名

gulp実効コマンド
npm start

gulpモジュールインストールコマンド
npm install

ターミナルで特定フォルダに移動するコマンド
cdスペースフィンダーからフォルダをドラッグアンドドロップ
例：cd /Users/hogehoge/Desktop/gulp

-----------------------------------
	Gitでのバージョン管理について
-----------------------------------
node_modulesフォルダは管理外とします。
グローバルのgitignoreファイルにnode_modules/と記述してください。
グローバルのgitignoreファイルの場所は/User/username/.gitignore_globalです。
不可視ファイルなので、可視化できるようにしてください。
※グルーウェブ社外の方と作業するときは、.gitignore ファイルを設置する

-----------------------------------
	インストール済みモジュール
-----------------------------------
package.json を参照ください。

-----------------------------------
	glup起動方法
-----------------------------------
ターミナルでプロジェクトフォルダに移動して、npm install を実行。
ターミナルで npm start を実行すると、gulpがスタート。
動作させた後は、ターミナルを触る必要はありません。
ターミナルを終了させる場合は、ctrl + c 押して、
exitでターミナルが終了する。

-----------------------------------
	ejsの使用方法
-----------------------------------
「~~~.ejs」は「~~~.html」にコンパイルされる。
「_~~~.ejs」という風に、先頭にアンダースコアをつけるとコンパイルされないので、
他のhtmlファイルにincludeする為のファイル「テンプレートファイル」になる。
詳しい使用方法は「http://qiita.com/y_hokkey/items/31f1daa6cecb5f4ea4c9」を参照。

-----------------------------------
	browserSyncの使用方法
-----------------------------------
gulpを起動させると、自動的にブラウザが開かれるので、後は、何もしなくて良い。
wordpressで使用したい場合は、gulpfile.jsの48行目のbaseDirの部分をコメントアウトして、proxyをアンコメントする。
ターミナルに表示される、External URLがローカルサーバーのURL。
このローカルサーバーにアクセスすれば、携帯でもローカルファイルを閲覧可能

-----------------------------------
	autoprefixerの使用方法
-----------------------------------
Sassをコンパイルすると、自動でプレフックスを付与するので、操作不要。
プレフックス対象ブラウザを変更したい場合は、オプションを変更することで可能。
例：.pipe(autoprefixer({browsers: ['last 3 versions','ie >=10','android >=4.2']}))
の場合、最新ブラウザから３つとie10以上とandroid4.2以上となる。





